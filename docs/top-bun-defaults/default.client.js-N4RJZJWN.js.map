{
  "version": 3,
  "sources": ["../../../../../../.bun/install/global/node_modules/mine.css/dist/theme-switcher.js", "../../../../../../.bun/install/global/node_modules/top-bun/lib/defaults/default.client.js"],
  "sourcesContent": ["// @media (prefers-color-scheme: dark) {\n\nconst colorSchemeMql = window.matchMedia('(prefers-color-scheme: dark)')\ncolorSchemeMql.addListener(setTheme)\n\nfunction setTheme (e) {\n  const isDarkMode = e.matches\n  const colorScheme = window.sessionStorage.getItem('color-scheme')\n  const body = document.documentElement\n  switch (colorScheme) {\n    case 'dark': {\n      if (isDarkMode) window.sessionStorage.setItem('color-scheme', 'automatic')\n      body.classList.toggle('light-mode', false)\n      body.classList.toggle('dark-mode', true)\n      break\n    }\n    case 'light': {\n      if (!isDarkMode) window.sessionStorage.setItem('color-scheme', 'automatic')\n      body.classList.toggle('light-mode', true)\n      body.classList.toggle('dark-mode', false)\n      break\n    }\n    case 'automatic':\n    default: {\n      body.classList.toggle('light-mode', isDarkMode === false)\n      body.classList.toggle('dark-mode', isDarkMode === true)\n      break\n    }\n  }\n}\n\nsetTheme(window.matchMedia('(prefers-color-scheme: dark)'))\n\nexport function toggleTheme () {\n  const mql = window.matchMedia('(prefers-color-scheme: dark)')\n  const isDarkMode = mql.matches\n  const colorScheme = window.sessionStorage.getItem('color-scheme')\n\n  switch (colorScheme) {\n    case 'dark': {\n      window.sessionStorage.setItem('color-scheme', isDarkMode ? 'light' : 'automatic')\n      break\n    }\n    case 'light': {\n      window.sessionStorage.setItem('color-scheme', isDarkMode ? 'automatic' : 'dark')\n      break\n    }\n    case 'automatic':\n    default: {\n      window.sessionStorage.setItem('color-scheme', isDarkMode ? 'light' : 'dark')\n      break\n    }\n  }\n  setTheme(mql)\n}\n\nconst defaultTypeSetting = 'mine-type-scheme'\n\nexport function setType (querySelector, settingsKey = defaultTypeSetting) {\n  const element = document.querySelector(querySelector)\n  const desiredType = window.sessionStorage.getItem(settingsKey)\n\n  element.classList.toggle('serif', desiredType === 'serif')\n  element.classList.toggle('round', desiredType === 'round')\n  element.classList.toggle('sans', desiredType === 'sans')\n}\n\nsetType('body')\n\nexport function toggleType (querySelector, settingsKey = defaultTypeSetting) {\n  const typeScheme = window.sessionStorage.getItem('mine-type-scheme')\n\n  switch (typeScheme) {\n    case 'sans': {\n      window.sessionStorage.setItem(settingsKey, 'serif')\n      break\n    }\n    case 'serif': {\n      window.sessionStorage.setItem(settingsKey, 'round')\n      break\n    }\n    case 'round':\n    default: {\n      window.sessionStorage.setItem(settingsKey, 'sans')\n      break\n    }\n  }\n\n  setType(querySelector, settingsKey)\n}\n", "// @ts-ignore\nimport { toggleTheme } from 'mine.css'\n// @ts-ignore\nwindow.toggleTheme = toggleTheme\n"],
  "mappings": ";AAEA,IAAM,iBAAiB,OAAO,WAAW,8BAA8B;AACvE,eAAe,YAAY,QAAQ;AAEnC,SAAS,SAAU,GAAG;AACpB,QAAM,aAAa,EAAE;AACrB,QAAM,cAAc,OAAO,eAAe,QAAQ,cAAc;AAChE,QAAM,OAAO,SAAS;AACtB,UAAQ,aAAa;AAAA,IACnB,KAAK,QAAQ;AACX,UAAI;AAAY,eAAO,eAAe,QAAQ,gBAAgB,WAAW;AACzE,WAAK,UAAU,OAAO,cAAc,KAAK;AACzC,WAAK,UAAU,OAAO,aAAa,IAAI;AACvC;AAAA,IACF;AAAA,IACA,KAAK,SAAS;AACZ,UAAI,CAAC;AAAY,eAAO,eAAe,QAAQ,gBAAgB,WAAW;AAC1E,WAAK,UAAU,OAAO,cAAc,IAAI;AACxC,WAAK,UAAU,OAAO,aAAa,KAAK;AACxC;AAAA,IACF;AAAA,IACA,KAAK;AAAA,IACL,SAAS;AACP,WAAK,UAAU,OAAO,cAAc,eAAe,KAAK;AACxD,WAAK,UAAU,OAAO,aAAa,eAAe,IAAI;AACtD;AAAA,IACF;AAAA,EACF;AACF;AAEA,SAAS,OAAO,WAAW,8BAA8B,CAAC;AAEnD,SAAS,cAAe;AAC7B,QAAM,MAAM,OAAO,WAAW,8BAA8B;AAC5D,QAAM,aAAa,IAAI;AACvB,QAAM,cAAc,OAAO,eAAe,QAAQ,cAAc;AAEhE,UAAQ,aAAa;AAAA,IACnB,KAAK,QAAQ;AACX,aAAO,eAAe,QAAQ,gBAAgB,aAAa,UAAU,WAAW;AAChF;AAAA,IACF;AAAA,IACA,KAAK,SAAS;AACZ,aAAO,eAAe,QAAQ,gBAAgB,aAAa,cAAc,MAAM;AAC/E;AAAA,IACF;AAAA,IACA,KAAK;AAAA,IACL,SAAS;AACP,aAAO,eAAe,QAAQ,gBAAgB,aAAa,UAAU,MAAM;AAC3E;AAAA,IACF;AAAA,EACF;AACA,WAAS,GAAG;AACd;AAEA,IAAM,qBAAqB;AAEpB,SAAS,QAAS,eAAe,cAAc,oBAAoB;AACxE,QAAM,UAAU,SAAS,cAAc,aAAa;AACpD,QAAM,cAAc,OAAO,eAAe,QAAQ,WAAW;AAE7D,UAAQ,UAAU,OAAO,SAAS,gBAAgB,OAAO;AACzD,UAAQ,UAAU,OAAO,SAAS,gBAAgB,OAAO;AACzD,UAAQ,UAAU,OAAO,QAAQ,gBAAgB,MAAM;AACzD;AAEA,QAAQ,MAAM;;;AChEd,OAAO,cAAc;",
  "names": []
}
